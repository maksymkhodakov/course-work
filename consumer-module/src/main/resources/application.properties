spring.application.name=consumer

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.hibernate.ddl-auto=update

# for testing purpose only in order not to garbage prod logs
#spring.jpa.show-sql=true
#logging.level.org.hibernate.sql=trace

spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

spring.rabbitmq.host=${RABBIT_HOST}
spring.rabbitmq.username=${RABBIT_USERNAME}
spring.rabbitmq.password=${RABBIT_PASSWORD}
spring.rabbitmq.listener.simple.retry.enabled=${RETRY_ENABLED}
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.listener.simple.retry.initial-interval=2s
spring.rabbitmq.listener.simple.retry.max-attempts=5
spring.rabbitmq.listener.simple.retry.multiplier=1.5

spring.main.allow-bean-definition-overriding=true
spring.kafka.bootstrap-servers=host.docker.internal:29092,host.docker.internal:29093
spring.kafka.listener.ack-mode=record
spring.kafka.producer.client-id=${spring.application.name}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.example.consumermodule.serializers.DltDeserializer
spring.kafka.producer.retries=3
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.properties.spring.json.value.default.type=org.example.producermodule.domain.dto.AnimalDTO
spring.kafka.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
kafka.topics.dev=dev

server.port=8082
